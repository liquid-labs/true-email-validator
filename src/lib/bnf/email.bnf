addr_spec ::= local_part "@" domain ;
local_part ::= dot_atom | quoted_string ;
domain ::= dot_atom | domain_literal ;
dot_atom ::= CFWS? ...dot_atom_text CFWS? ;
dot_atom_text ::= atext+ ( "." atext+ )* ;
atext ::= ALPHA | DIGIT | UTF8_NON_ASCII | "!" | "#" | "$" | "%" | "&" | "'" |"*" | "+" |"-" | "/" | "=" | "?" | "^" | "_" | "`" | "{" |"|" | "}" | "~" ;
domain_literal ::= CFWS? "\x5b" ...( ( FWS? dtext )* FWS? ) "\x5d" CFWS? ;
dtext ::= "\x21" -> "\x5a" | "\x5e" -> "\x7e" ; # printable ASCII except '[', ']', and '\'
quoted_string ::= CFWS? ...( DQUOTE ( ( FWS? qcontent)* FWS? ) DQUOTE ) CFWS? ;
qcontent ::= qtext | quoted_pair ;
qtext ::= "\x20" -> "\x21" | "\x23" -> "\x5b" | "\x5d" -> "\x7e" | UTF8_NON_ASCII ; # printable ASCII except '\' and '"'
quoted_pair ::= "\x5c" ( VCHAR | WSP ) ; # \x5c = \
comment ::= "(" ...( ( FWS? ccontent )* FWS? ) ")" ;
ccontent ::= ctext | quoted_pair | comment ;
ctext ::= "\x20" -> "\x27" | "\x2a" -> "\x5b" | "\x5d" -> "\x7e" ; # printable ASCII except '(', ')', and '\'

CFWS ::= ( ( FWS? comment )*  FWS? ) | FWS ;
FWS ::= ( WSP* CRLF )? WSP+ ;
CRLF ::= "\x0d" "\x0a" ;
ALPHA ::= "a" -> "z" | "A" -> "Z" ;
DIGIT ::= "0" -> "9" ;
UTF8_NON_ASCII ::= "\u0080" -> "\uffff" ;
DQUOTE ::= "\x22" ;
VCHAR ::= "\x21" -> "\x7e" ;
WSP ::= "\x20" | "\x09" ;